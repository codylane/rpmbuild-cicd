#!/usr/bin/env bash
set -e

PRIVATE_KEY_FILE="${PRIVATE_KEY_FILE:-/var/run/secrets/gitserver_ssh_key}"

credential_template()
{

cat <<- CRED_TEMPLATE
<list>
  <com.cloudbees.plugins.credentials.domains.DomainCredentials plugin="credentials@2.3.14">
    <domain>
      <specifications/>
    </domain>
    <credentials>
      <com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey plugin="ssh-credentials@1.18.1">
        <scope>GLOBAL</scope>
        <id>gitserver_ssh_key</id>
        <description>Your SSH key from ${GITSERVER_FQDN}</description>
        <username>git</username>
        <privateKeySource class="com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey\$DirectEntryPrivateKeySource">
          <privateKey>${PRIVATE_KEY_CONTENT}</privateKey>
        </privateKeySource>
      </com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey>
    </credentials>
  </com.cloudbees.plugins.credentials.domains.DomainCredentials>
</list>
CRED_TEMPLATE

}

if [ -z "${PRIVATE_KEY_FILE}" ]; then
  echo "Please ensure that you set PRIVATE_KEY_FILE in docker-compose.yml as a build arg"
  exit 1
fi

if [ ! -f "${PRIVATE_KEY_FILE}" ]; then
  echo "Please ensure that docker-compose.yml file is configured to use secrets. Consult 'https://docs.docker.com/compose/compose-file/compose-file-v3/'"
  echo "Expected file '${PRIVATE_KEY_FILE}' to exist"
  exit 1
fi

PRIVATE_KEY_CONTENT="$(cat ${PRIVATE_KEY_FILE})"
credential_template
